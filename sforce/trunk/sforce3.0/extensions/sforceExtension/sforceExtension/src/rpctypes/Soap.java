/*   Copyright 2004 Salesforce.com
 *
 *   Licensed under the Apache License, Version 2.0 (the "License");
 *   you may not use this file except in compliance with the License.
 *   You may obtain a copy of the License at
 *
 *       http://www.apache.org/licenses/LICENSE-2.0
 *
 *   Unless required by applicable law or agreed to in writing, software
 *   distributed under the License is distributed on an "AS IS" BASIS,
 *   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *   See the License for the specific language governing permissions and
 *   limitations under the License.
 */

package rpctypes;

/**
 * Generated interface, do not edit.
 *
 * This stub interface was generated by weblogic
 * webservice stub gen on Wed May 05 02:42:36 PDT 2004 */

public interface Soap extends java.rmi.Remote{

  /**
   * search 
   */

  public javax.xml.soap.SOAPElement search(rpctypes.Search parameters, rpctypes.SessionHeader SessionHeader, rpctypes.CallOptions CallOptions) 
       throws rpctypes.InvalidSObjectFault, rpctypes.InvalidFieldFault, rpctypes.MalformedSearchFault, rpctypes.UnexpectedErrorFault, java.rmi.RemoteException ;
  /**
   * getUpdated 
   */

  public rpctypes.GetUpdatedResponse getUpdated(rpctypes.GetUpdated parameters, rpctypes.SessionHeader SessionHeader, rpctypes.CallOptions CallOptions) 
       throws rpctypes.InvalidSObjectFault, rpctypes.UnexpectedErrorFault, java.rmi.RemoteException ;
  /**
   * Convenience method for getUpdated 
   */

  public rpctypes.GetUpdatedResult getUpdated(java.lang.String sObjectType, java.util.Calendar startDate, java.util.Calendar endDate, rpctypes.SessionHeader SessionHeader, rpctypes.CallOptions CallOptions)
       throws rpctypes.InvalidSObjectFault, rpctypes.UnexpectedErrorFault, java.rmi.RemoteException ;
  /**
   * describeGlobal 
   */

  public rpctypes.DescribeGlobalResponse describeGlobal(rpctypes.DescribeGlobal parameters, rpctypes.SessionHeader SessionHeader, rpctypes.CallOptions CallOptions) 
       throws rpctypes.UnexpectedErrorFault, java.rmi.RemoteException ;
  /**
   * Convenience method for describeGlobal 
   */

  public rpctypes.DescribeGlobalResult describeGlobal(rpctypes.SessionHeader SessionHeader, rpctypes.CallOptions CallOptions)
       throws rpctypes.UnexpectedErrorFault, java.rmi.RemoteException ;
  /**
   * query 
   */

  public javax.xml.soap.SOAPElement query(rpctypes.Query parameters, rpctypes.SessionHeader SessionHeader, rpctypes.CallOptions CallOptions, rpctypes.QueryOptions QueryOptions) 
       throws rpctypes.InvalidSObjectFault, rpctypes.InvalidFieldFault, rpctypes.MalformedQueryFault, rpctypes.UnexpectedErrorFault, java.rmi.RemoteException ;
  /**
   * update 
   */

  public rpctypes.SaveResult[] update(javax.xml.soap.SOAPElement parameters, rpctypes.SessionHeader SessionHeader, rpctypes.CallOptions CallOptions, rpctypes.SaveOptions SaveOptions) 
       throws rpctypes.InvalidSObjectFault, rpctypes.UnexpectedErrorFault, java.rmi.RemoteException ;
  /**
   * create 
   */

  public rpctypes.SaveResult[] create(javax.xml.soap.SOAPElement parameters, rpctypes.SessionHeader SessionHeader, rpctypes.CallOptions CallOptions, rpctypes.SaveOptions SaveOptions) 
       throws rpctypes.InvalidSObjectFault, rpctypes.UnexpectedErrorFault, java.rmi.RemoteException ;
  /**
   * login 
   */

  public rpctypes.LoginResponse login(rpctypes.Login parameters, rpctypes.CallOptions CallOptions) 
       throws rpctypes.LoginFault, rpctypes.UnexpectedErrorFault, java.rmi.RemoteException ;
  /**
   * Convenience method for login 
   */

  public rpctypes.LoginResult login(java.lang.String username, java.lang.String password, rpctypes.CallOptions CallOptions)
       throws rpctypes.LoginFault, rpctypes.UnexpectedErrorFault, java.rmi.RemoteException ;
  /**
   * queryMore 
   */

  public javax.xml.soap.SOAPElement queryMore(rpctypes.QueryMore parameters, rpctypes.SessionHeader SessionHeader, rpctypes.CallOptions CallOptions, rpctypes.QueryOptions QueryOptions) 
       throws rpctypes.InvalidQueryLocatorFault, rpctypes.UnexpectedErrorFault, java.rmi.RemoteException ;
  /**
   * retrieve 
   */

  public javax.xml.soap.SOAPElement retrieve(rpctypes.Retrieve parameters, rpctypes.SessionHeader SessionHeader, rpctypes.CallOptions CallOptions, rpctypes.QueryOptions QueryOptions) 
       throws rpctypes.InvalidSObjectFault, rpctypes.InvalidFieldFault, rpctypes.UnexpectedErrorFault, java.rmi.RemoteException ;
  /**
   * setPassword 
   */

  public rpctypes.SetPasswordResponse setPassword(rpctypes.SetPassword parameters, rpctypes.SessionHeader SessionHeader, rpctypes.CallOptions CallOptions) 
       throws rpctypes.InvalidIdFault, rpctypes.UnexpectedErrorFault, java.rmi.RemoteException ;
  /**
   * Convenience method for setPassword 
   */

  public rpctypes.SetPasswordResult setPassword(java.lang.String userId, java.lang.String password, rpctypes.SessionHeader SessionHeader, rpctypes.CallOptions CallOptions)
       throws rpctypes.InvalidIdFault, rpctypes.UnexpectedErrorFault, java.rmi.RemoteException ;
  /**
   * getDeleted 
   */

  public rpctypes.GetDeletedResponse getDeleted(rpctypes.GetDeleted parameters, rpctypes.SessionHeader SessionHeader, rpctypes.CallOptions CallOptions) 
       throws rpctypes.InvalidSObjectFault, rpctypes.UnexpectedErrorFault, java.rmi.RemoteException ;
  /**
   * Convenience method for getDeleted 
   */

  public rpctypes.GetDeletedResult getDeleted(java.lang.String sObjectType, java.util.Calendar startDate, java.util.Calendar endDate, rpctypes.SessionHeader SessionHeader, rpctypes.CallOptions CallOptions)
       throws rpctypes.InvalidSObjectFault, rpctypes.UnexpectedErrorFault, java.rmi.RemoteException ;
  /**
   * resetPassword 
   */

  public rpctypes.ResetPasswordResponse resetPassword(rpctypes.ResetPassword parameters, rpctypes.SessionHeader SessionHeader, rpctypes.CallOptions CallOptions) 
       throws rpctypes.InvalidIdFault, rpctypes.UnexpectedErrorFault, java.rmi.RemoteException ;
  /**
   * Convenience method for resetPassword 
   */

  public rpctypes.ResetPasswordResult resetPassword(java.lang.String userId, rpctypes.SessionHeader SessionHeader, rpctypes.CallOptions CallOptions)
       throws rpctypes.InvalidIdFault, rpctypes.UnexpectedErrorFault, java.rmi.RemoteException ;
  /**
   * describeSObject 
   */

  public rpctypes.DescribeSObjectResponse describeSObject(rpctypes.DescribeSObject parameters, rpctypes.SessionHeader SessionHeader, rpctypes.CallOptions CallOptions) 
       throws rpctypes.InvalidSObjectFault, rpctypes.UnexpectedErrorFault, java.rmi.RemoteException ;
  /**
   * Convenience method for describeSObject 
   */

  public rpctypes.DescribeSObjectResult describeSObject(java.lang.String sObjectType, rpctypes.SessionHeader SessionHeader, rpctypes.CallOptions CallOptions)
       throws rpctypes.InvalidSObjectFault, rpctypes.UnexpectedErrorFault, java.rmi.RemoteException ;
  /**
   * delete 
   */

  public rpctypes.DeleteResult[] delete(java.lang.String[] parameters, rpctypes.SessionHeader SessionHeader, rpctypes.CallOptions CallOptions) 
       throws rpctypes.UnexpectedErrorFault, java.rmi.RemoteException ;
  /**
   * getUserInfo 
   */

  public rpctypes.GetUserInfoResponse getUserInfo(rpctypes.GetUserInfo parameters, rpctypes.SessionHeader SessionHeader, rpctypes.CallOptions CallOptions) 
       throws rpctypes.UnexpectedErrorFault, java.rmi.RemoteException ;
  /**
   * Convenience method for getUserInfo 
   */

  public rpctypes.GetUserInfoResult getUserInfo(rpctypes.SessionHeader SessionHeader, rpctypes.CallOptions CallOptions)
       throws rpctypes.UnexpectedErrorFault, java.rmi.RemoteException ;
  /**
   * getServerTimestamp 
   */

  public rpctypes.GetServerTimestampResponse getServerTimestamp(rpctypes.GetServerTimestamp parameters, rpctypes.SessionHeader SessionHeader, rpctypes.CallOptions CallOptions) 
       throws rpctypes.UnexpectedErrorFault, java.rmi.RemoteException ;
  /**
   * Convenience method for getServerTimestamp 
   */

  public rpctypes.GetServerTimestampResult getServerTimestamp(rpctypes.SessionHeader SessionHeader, rpctypes.CallOptions CallOptions)
       throws rpctypes.UnexpectedErrorFault, java.rmi.RemoteException ;
}