#if ( $package && $package.length() > 0 )package $package;

#end
import java.io.IOException;

import org.apache.beehive.controls.api.bean.Control;

import org.controlhaus.xfire.client.XFireClientControlImpl;

import org.codehaus.xfire.fault.XFireFault;
import org.codehaus.xfire.client.ClientHandler;
#if ( $service.isRest() ) 
import org.codehaus.xfire.client.http.RestHttpClient;
#else
import org.codehaus.xfire.client.http.SoapHttpClient;
#end
import org.codehaus.xfire.xmlbeans.client.XMLBeansClientHandler;

import org.apache.xmlbeans.XmlObject;
import org.apache.xmlbeans.XmlOptions;

#foreach ( $import in $service.Imports )
import $import.FullJavaName;
#end

/**
 * Auto-generated client stub for $service.Name.
 *
 * TODO: Use correct SOAP version from WSDL
 */
public class ${implType}
extends XFireClientControlImpl
	implements ${interfaceType}
{
#foreach ($method in $service.Methods)
#if ($method.ResponseParameters.size() > 1)
  #set( $returnType = "XmlObject[]" )
#else
  #set( $returnType = "$method.ResponseParameters.get(0).Type.ShortJavaName" )
#end
#set( $first = true )
    public $returnType ${method.Name}( #foreach($p in $method.RequestParameters)#if($first) #set($first=false) #else,#end$p.Type.ShortJavaName $p.Name#end )
        throws IOException, XFireFault
    {
#set( $first = true )
        XmlObject[] request = new XmlObject[] 
        {
#foreach($p in $method.RequestParameters) 			$p.Name#if($first) #set($first=false) #else,#end #end        

		};
		
#if ($method.ResponseParameters.size() > 1)
        return invoke( request );
#else
        return ($method.ResponseParameters.get(0).Type.ShortJavaName) invoke( request )[0];
#end
    }

#end
}