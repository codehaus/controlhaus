package org.controlhaus.webservice.testmodel.server;


/*
 * Copyright 2004 The Apache Software Foundation
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 * 
 *     http://www.apache.org/licenses/LICENSE-2.0
 * 
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * $Header:$
 */

import java.util.Hashtable;
import java.util.Map;

import javax.jws.Oneway;
import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;




@WebService(targetNamespace="http://testmode.webservicex.controlhaus.org/AddressBook", serviceName="simpleAddressBookService")
public class SimpleWebService  {


    private Map<String, Address> addresses = new Hashtable<String, Address>();


    /**
     * Constructor.
     */
    public SimpleWebService() {
     }
    
    /**
     * Web method that adds an entry to the AddressBook.
     * @param name
     * @param address
     */
    @WebMethod
    public void addEntry(String name, Address address) {
        System.out.println("addEntry is called." );
        this.addresses.put(name, address);
    }

    /**
     * Web method that queries the AddressBook.
     * @param name
     * @return
     */
    @WebMethod
    public Address getAddressFromName(String name) {
        System.out.println("getAddressFromName is called.");
        return (Address) this.addresses.get(name);
    }
    
    @WebMethod
    public Address[] getAddressFromNames(String[] name) {
    	if(null == name) return null;
    	Address[] result = new Address[name.length];
    	for(int i=0; i< name.length; i++) {
    	 result[i] = getAddressFromName(name[i]);
    	}
    	return result;
    }    
    

    
}
