<!--
   Copyright 2004 The Apache Software Foundation 
 
   Licensed under the Apache License, Version 2.0 (the "License");
   you may not use this file except in compliance with the License.
   You may obtain a copy of the License at
  
      http://www.apache.org/licenses/LICENSE-2.0
  
   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
 
   $Header:$
 -->

<project name="xmlbea _service_control_sample" default="run.test">

	  <property environment="env"/>
 
	  <property name="build.dir" value="./build"/>
	  <property name="xbeangen.dir" value="${build.dir}/xbeangen"/>
	  <property name="extgen.dir" value="${build.dir}/extgen"/>
	  <property name="jcxgen.dir" value="${build.dir}/controlgen"/>
	

    <property name="source.dir" value="./src"/>

	  <property name="junit.source.dir" value="./junit"/>
	<property name="test.logs" value="./logs"/>
	<property name="servers.dir" value="./servers/local"/>  <!-- test servers -->
	<property name="build.classes" value="${build.dir}/classes"/>
    <property name="build.beansrc" value="${build.dir}/beansrc"/>
	<property name="axisbeangen.dir" value="${build.dir}/axisbeangen"/>
    <property name="servicecontrol.jar" value="../../servicecontrol/build/jars/webservice-control.jar" />
 
	<property name="beehive.home" value="${env.BEEHIVE_HOME}"/>
	<property name="beehive.common.lib.dir" value="${beehive.home}/lib/common"/>
	
	<property name="controls.jar" value="${beehive.home}/lib/controls/controls.jar" />
	<property name="schema.dir" value="schemas" />
 
	
	  <path id="beehive.class.path">
	    <fileset dir="${beehive.home}/lib/wsm" includes="*.jar"/>
	    <pathelement location="${beehive.home}/lib/controls/controls.jar"/>
	    <pathelement location="${beehive.common.lib.dir}/apache-xbean.jar"/>
	    <pathelement location="${beehive.common.lib.dir}/log4j-1.2.8.jar"/>
	    <pathelement location="${beehive.common.lib.dir}/velocity-dep-1.4.jar"/>
	    <pathelement location="${beehive.common.lib.dir}/jsr173_1.0_api.jar"/>
	    <pathelement location="${lib.dir}/junit-3.8.1.jar"/>
	    <pathelement location="${basedir}/lib/servlet-api-2.4-20040521.jar"/>
	    <pathelement location="${basedir}/lib/jsp-api-2.0-20040521.jar"/>
	  </path>
	  	
    <path id="build.classpath">
	    <fileset dir="../../servicecontrol/lib">
	        <include name="**/*.jar"/>
	    </fileset>
	    
    	<path refid="beehive.class.path"  />
    	<pathelement path="${servicecontrol.jar}" /> 
    </path>

    <taskdef name="apt" classname="org.apache.beehive.controls.runtime.generator.AptTask" 
             classpath="${controls.jar}" onerror="report" />
    <taskdef name="control-jar" 
             classname="org.apache.beehive.controls.runtime.packaging.ControlJarTask" 
             classpath="${controls.jar}" onerror="report" />             

	 <!-- XMLBean build -->
	  <taskdef name="xmlbeanbuild" 
	    classname="org.apache.xmlbeans.impl.tool.XMLBean">
	    <classpath>
	      <path refid="build.classpath"/>
	    </classpath>
	  </taskdef>
	
    <target name="clean" description="Deletes all generated files">
        <delete dir="${build.dir}"/>
        <delete file="velocity.log"/>
        <delete dir="${xbeangen.dir}" />
           <delete dir="${test.logs}" />
	    <delete dir="${extgen.dir}"/>
	    <delete dir="${jcxgen.dir}"/>
   </target>

    <target name="dirs">
        <mkdir dir="${build.classes}" />
        <mkdir dir="${xbeangen.dir}" />
         <mkdir dir="${test.logs}" />
	    <mkdir dir="${extgen.dir}"/>
	    <mkdir dir="${jcxgen.dir}"/>
     </target>

    <target name="build" depends="build_jcx, build_junit" description="Builds source, and servlets" />
   	


	
	  <target name="gen_jcx" depends="gen_xmlbeans">
	    <java classname="org.controlhaus.webservice.generator.ExtensionMaker">
	    	<classpath> 
	    		<path refid="build.classpath"/>
	    		<pathelement location="${build.classes}"/>
	    	</classpath>
	      <arg line="-pkg amazonWS -gen_root ${jcxgen.dir} -wsdl ${schema.dir} -serviceURL http://soap.amazon.com/onca/soap?Service=AWSECommerceService "/>
	    </java>

	  </target>

	  <target name="build_jcx" depends="gen_jcx">
	  	<echo message="jcxgen: ${jcxgen.dir}   extgen: ${extgen.dir}" />
	
	    <apt srcdir="${jcxgen.dir}" 
	      destdir="${build.classes}" 
	      gendir="${extgen.dir}" 
	      classpathref="build.classpath" 
	      compileByExtension="true" 
	      srcExtensions="*.jcx,*.java" 
	      debug="true"/>
	  </target>


	
	
	  <target name="checkxbean">
	    <uptodate property="noxbeanrebuild" targetfile="${xbeangen.dir}">
	      <srcfiles dir="${schema.dir}" includes="*.wsdl,*.xsd"/> 
	    </uptodate>
	  </target>

	  <target name="gen_xmlbeans" depends="checkxbean, dirs" unless="noxbeanrebuild">
	    <xmlbeanbuild
	      schema="${schema.dir}" 
	      srcgendir="${xbeangen.dir}"
	      classgendir="${build.classes}"
	      failonerror="true">
	      <classpath>
	        <path refid="build.classpath"/>
	      </classpath>
	    </xmlbeanbuild>
	  </target>


	
	   <target name="build_junit" depends="build_jcx" >
	   	<apt srcdir="${junit.source.dir}" destdir="${build.classes}" gendir="${build.beansrc}"
	              debug="on"
	             compileByExtension="true" 
	             srcExtensions="*.jcx,*.java">  
	            <classpath>
	                 <path refid="build.classpath"/>
	             </classpath>
	       </apt>
	  	<!-- update properties (e.g. log4j.properties) -->
	  	<copy todir="${build.classes}">
	        <fileset dir="${junit.source.dir}">
	            <include name="**/*properties"/>
	        </fileset>
	  	</copy>	   	
	   		
	</target>
	   <target name="run.test" depends="build">
	        <junit failureproperty="testfailed" printsummary="on" tempdir="${build.dir}" fork="yes">
	            <classpath>
	                 <pathelement location="${build.classes}"/>
	                 <path refid="build.classpath"/>
	             </classpath>
	            <formatter type="plain"/>
	            <batchtest filtertrace="off" todir="${test.logs}"> 
	                <fileset dir="${junit.source.dir}">
	                    <include name="**/*Test.java"/>
	                </fileset>
	            </batchtest>
	        </junit>
	        <fail if="testfailed" message="One or more tests in the Google test failed." />
	    </target>
</project>
