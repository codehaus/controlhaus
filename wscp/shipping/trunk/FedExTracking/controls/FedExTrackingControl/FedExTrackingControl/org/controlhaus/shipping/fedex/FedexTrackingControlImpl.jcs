/*   Copyright 2004 BEA Systems, Inc.
 *
 *   Licensed under the Apache License, Version 2.0 (the "License");
 *   you may not use this file except in compliance with the License.
 *   You may obtain a copy of the License at
 *
 *       http://www.apache.org/licenses/LICENSE-2.0
 *
 *   Unless required by applicable law or agreed to in writing, software
 *   distributed under the License is distributed on an "AS IS" BASIS,
 *   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *   See the License for the specific language governing permissions and
 *   limitations under the License.
 */


package org.controlhaus.shipping.fedex; 

import com.bea.control.*;
import com.bea.xml.XmlException;
import java.io.IOException;
import java.net.UnknownHostException;
/**
 * @editor-info:code-gen control-interface="true"
 * @jcs:control-tags file="FedexProperties.xml"
 * @jcs:jc-jar icon-32="icon32.gif" icon-16="icon16.gif" version="1.0" description="FedEx Tracking" label="FedEx Tracking"
 */
public class FedexTrackingControlImpl implements FedexTrackingControl, ControlSource
{ 
    static final long serialVersionUID = 1L;
    
    private static org.controlhaus.shipping.fedex.impl.FedexConnectionImpl fedexConnection = null;
    private org.controlhaus.shipping.fedex.impl.FedexTracking fedexTracking = new org.controlhaus.shipping.fedex.impl.FedexTrackingImpl();
    private org.controlhaus.shipping.fedex.impl.ResponseAppender responseAppender = new org.controlhaus.shipping.fedex.impl.ResponseAppender.ResponseAppenderImpl();

    /** @common:context */
    ControlContext context;

    /**
     * @common:operation
     */
    public org.controlhaus.schema.fedex.FDXTrackReplyDocument.FDXTrackReply track(org.controlhaus.shipping.fedex.impl.FedexTrackRequest fedexTrackRequest) throws Exception
    {        
        try{
            if(fedexConnection == null){
                String serverName = context.getControlAttribute("jc:fedex-control-tag","server-name");
                String serverPort = context.getControlAttribute("jc:fedex-control-tag","server-port");
                initilizeConnection(serverName, serverPort);            
            }       
                    
            org.controlhaus.shipping.fedex.impl.FedexResponse fedexResponse = fedexTracking.track(fedexTrackRequest , fedexConnection);
                    
            System.out.println("Response Headers : ");
            String headers[] = fedexResponse.headers();
            for (int i = 0; i < headers.length; i++) {
                System.out.println(headers[i]);
            }        
            
            if(fedexResponse == null) throw new RuntimeException("Response recieved from FedEx is null");
            
            String appendedResponse = responseAppender.append(fedexResponse.body());        
            
            org.controlhaus.schema.fedex.FDXTrackReplyDocument fdxTrackReplyDocument = org.controlhaus.schema.fedex.FDXTrackReplyDocument.Factory.parse(appendedResponse);
            
            return fdxTrackReplyDocument.getFDXTrackReply();
            
        }catch (Exception e){
            e.printStackTrace();
            throw e;
        }       
        
    }
    
    private void initilizeConnection(String serverName, String serverPort){
        fedexConnection = new org.controlhaus.shipping.fedex.impl.FedexConnectionImpl();
        fedexConnection.setServer(serverName);
        int port = Integer.parseInt(serverPort);
        fedexConnection.setPort(443);        
    }
} 
