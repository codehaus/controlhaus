/*   Copyright 2004 Salesforce.com
 *
 *   Licensed under the Apache License, Version 2.0 (the "License");
 *   you may not use this file except in compliance with the License.
 *   You may obtain a copy of the License at
 *
 *       http://www.apache.org/licenses/LICENSE-2.0
 *
 *   Unless required by applicable law or agreed to in writing, software
 *   distributed under the License is distributed on an "AS IS" BASIS,
 *   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *   See the License for the specific language governing permissions and
 *   limitations under the License.
 */

package pages.contacts.contactList;

import com.bea.netuix.servlets.controls.AbstractEvent;
import com.bea.netuix.servlets.controls.content.JspContentContext;
import com.bea.netuix.servlets.controls.page.BookBackingContext;
import com.bea.netuix.servlets.controls.page.PageBackingContext;
import com.bea.netuix.servlets.controls.portlet.backing.PortletBackingContext;
import com.bea.netuix.servlets.controls.portlet.events.PortletEvent;
import com.bea.netuix.servlets.controls.portlet.events.PortletEventListener;
import com.bea.wlw.netui.pageflow.Forward;
import com.bea.wlw.netui.pageflow.PageFlowController;
import com.sforce.soap.enterprise.DescribeSObjectResult;
import com.sforce.soap.enterprise.QueryResult;
import com.sforce.soap.enterprise.sobject.Contact;
import com.sforce.soap.enterprise.sobject.SObject;

/**
 * @jpf:controller
 * @jpf:view-properties view-properties::
 * <!-- This data is auto-generated. Hand-editing this section is not recommended. -->
 * <view-properties>
 * <pageflow-object id="pageflow:/pages/contacts/contactList/ContactListController.jpf"/>
 * <pageflow-object id="action:begin.do">
 *   <property value="80" name="x"/>
 *   <property value="100" name="y"/>
 * </pageflow-object>
 * <pageflow-object id="action:listContacts.do">
 *   <property value="80" name="x"/>
 *   <property value="220" name="y"/>
 * </pageflow-object>
 * <pageflow-object id="action:viewContact.do">
 *   <property value="120" name="x"/>
 *   <property value="100" name="y"/>
 * </pageflow-object>
 * <pageflow-object id="action-call:@page:contactList.jsp@#@action:viewContact.do@">
 *   <property value="114,85,85,120" name="elbowsX"/>
 *   <property value="111,111,56,56" name="elbowsY"/>
 *   <property value="West_0" name="fromPort"/>
 *   <property value="North_1" name="toPort"/>
 * </pageflow-object>
 * <pageflow-object id="page:contactList.jsp">
 *   <property value="150" name="x"/>
 *   <property value="130" name="y"/>
 * </pageflow-object>
 * <pageflow-object id="forward:path#success#listContacts.do#@action:begin.do@">
 *   <property value="44,44,80,80" name="elbowsX"/>
 *   <property value="103,156,156,176" name="elbowsY"/>
 *   <property value="West_2" name="fromPort"/>
 *   <property value="North_1" name="toPort"/>
 *   <property value="success" name="label"/>
 * </pageflow-object>
 * <pageflow-object id="forward:path#success#contactList.jsp#@action:listContacts.do@">
 *   <property value="91,91,102,114" name="elbowsX"/>
 *   <property value="176,133,133,133" name="elbowsY"/>
 *   <property value="North_2" name="fromPort"/>
 *   <property value="West_2" name="toPort"/>
 *   <property value="success" name="label"/>
 * </pageflow-object>
 * <pageflow-object id="forward:path#success#contactList.jsp#@action:viewContact.do@">
 *   <property value="120,85,85,114" name="elbowsX"/>
 *   <property value="56,56,111,111" name="elbowsY"/>
 *   <property value="North_1" name="fromPort"/>
 *   <property value="West_0" name="toPort"/>
 *   <property value="success" name="label"/>
 * </pageflow-object>
 * <pageflow-object id="formbeanprop:pages.contacts.contactList.ContactListController.ContactForm#contact#com.sforce.soap.enterprise.sobject.Contact"/>
 * <pageflow-object id="formbeanprop:pages.contacts.contactList.ContactListController.ContactForm#id#java.lang.String"/>
 * <pageflow-object id="formbeanprop:pages.contacts.contactList.ContactListController.ContactForm#salutation#java.lang.String"/>
 * <pageflow-object id="formbeanprop:pages.contacts.contactList.ContactListController.ContactForm#firstName#java.lang.String"/>
 * <pageflow-object id="formbeanprop:pages.contacts.contactList.ContactListController.ContactForm#lastName#java.lang.String"/>
 * <pageflow-object id="formbeanprop:pages.contacts.contactList.ContactListController.ContactForm#department#java.lang.String"/>
 * <pageflow-object id="formbeanprop:pages.contacts.contactList.ContactListController.ContactForm#title#java.lang.String"/>
 * <pageflow-object id="formbeanprop:pages.contacts.contactList.ContactListController.ContactForm#businessPhone#java.lang.String"/>
 * <pageflow-object id="formbeanprop:pages.contacts.contactList.ContactListController.ContactForm#mobilePhone#java.lang.String"/>
 * <pageflow-object id="formbeanprop:pages.contacts.contactList.ContactListController.ContactForm#email#java.lang.String"/>
 * <pageflow-object id="formbeanprop:pages.contacts.contactList.ContactListController.ContactForm#mailingStreet#java.lang.String"/>
 * <pageflow-object id="formbeanprop:pages.contacts.contactList.ContactListController.ContactForm#mailingCity#java.lang.String"/>
 * <pageflow-object id="formbeanprop:pages.contacts.contactList.ContactListController.ContactForm#mailingState#java.lang.String"/>
 * <pageflow-object id="formbeanprop:pages.contacts.contactList.ContactListController.ContactForm#mailingCountry#java.lang.String"/>
 * <pageflow-object id="formbean:pages.contacts.contactList.ContactListController.ContactForm"/>
 * </view-properties>
 * ::
 */
public class ContactListController extends PageFlowController implements PortletEventListener
{
    private org.controlhaus.sforce.sforce3_0Enterprise sForce;
    
    public ContactForm[] contacts;

	public static String CONTACT_FIELDS = "Id, Salutation, FirstName, LastName, Title, Department, Phone, MobilePhone, Email, MailingStreet, MailingCity, MailingState, MailingCountry";
    public static String CONTACT_SELECT_ALL = "Select "+CONTACT_FIELDS+" From Contact";


    // Uncomment this declaration to access Global.app.
    // 
    //     protected global.Global globalApp;
    // 

    // For an example of page flow exception handling see the example "catch" and "exception-handler"
    // annotations in {project}/WEB-INF/src/global/Global.app

    /**
     * This method represents the point of entry into the pageflow
     * @jpf:action
     * @jpf:forward name="success" path="listContacts.do"
     */
    protected Forward begin()
    {
        if(null==sForce){
            sForce = (org.controlhaus.sforce.sforce3_0Enterprise)this.getRequest().getSession().getAttribute("sForce");
        }

        // Register for Portlet Events
        PortletBackingContext portletBackingContext = PortletBackingContext.getPortletBackingContext(this.getRequest());
        PortletEvent.addGlobalListener(portletBackingContext, this);
        return new Forward("success");
    }
        
    /**
     * @jpf:action
     * @jpf:forward name="success" path="contactList.jsp"
     */
    //Retrieve a set of all contacts that this user can see.  This is an unbounded query.
    protected Forward listContacts()
    {
        try
        {
            loadList();
        }
        catch( Exception ex)
        {
            this.getRequest().setAttribute("msg", ex.getMessage());
            ex.printStackTrace();         
        }        
        return new Forward("success");        
    }
    
    private void loadList(){
        System.out.println("loadlist1");
        int batchSize = 8;
        //if (this.getRequest().getParameter("refresh") != null || contacts == null) {
                
        // Query Contact
        QueryResult queryResult=sForce.query(CONTACT_SELECT_ALL);

        //queryResult.getSize() returns the total number of records that matched the query
        //criteria.  This number can be larger than the length of the getRecordsArray() 
        //due to the ability to specify the number of records returned for a batch.  
        if ( queryResult.getSize() != 0 ) {
            // store contacts
            //create a loop control variable
            boolean done = false;
            int loopCount = 0;  //use this as an offset into the contacts
            //use the getSize() method to set the size of the array
            contacts = new ContactForm[queryResult.getSize()];
            while (!done) {
                for (int i=0; i< queryResult.getRecordsArray().length; i++) {
                    contacts[loopCount] = new ContactForm();
                    SObject sObj = queryResult.getRecordsArray(i);
                    contacts[loopCount].setContact((Contact) sObj);
                    System.out.println("i: "+loopCount+" "+((Contact)sObj).getId()+" "+contacts[loopCount].getFirstName());
                    loopCount++;
                }
                //check to see if this is the last batch from the query
                if (queryResult.getDone()) {
                    //set the loop control to true to exit the loop
                    done = true;
                } else {
                    // this means there is another batch of records to be retrieved
                    // reset the queryResult using the queryMore function passing the 
                    // "cursor" to the function.                            
                    queryResult = sForce.queryMore(queryResult.getQueryLocator());
                }
            }
        }
        //}
        System.out.println("loadlist2");
    }
    
    /**
     * @jpf:action
     * @jpf:forward name="success" path="contactList.jsp"
     */
    protected Forward viewContact(){
        return new Forward("success");
    }
    
    public void handleEvent(Object source, AbstractEvent event)
    {
        System.out.println("Got an event: " + event);
        System.out.println("From: " + source.getClass().getName());
        loadList();
    }

 

    public static class ContactForm extends com.bea.wlw.netui.pageflow.FormData
    {
        private Contact contact = Contact.Factory.newInstance();

		public Contact getContact() {
			return this.contact;
		}
		
        public void setContact( Contact contact) 
        {
            this.contact = contact;
        }
        
		public void setId(String id) {
			contact.setId(id);	
		}
        
		public String getId() {
			return contact.getId();
		}               
         
        public java.lang.String getSalutation()
        {
            if (contact.getSalutation() == null)
                return "";
            else
                return contact.getSalutation();
        }
        public java.lang.String getFirstName()
        {
            if (contact.getFirstName() == null) 
                return "";
            else
                return contact.getFirstName();
        }
        public java.lang.String getLastName()
        {
            return contact.getLastName();
        }
        public java.lang.String getDepartment()
        {
            if (contact.getDepartment() == null)
                return "";
            else
                return contact.getDepartment();
        }
        public java.lang.String getTitle()
        {
            if (contact.getTitle() == null)
                return "";
            else
                return contact.getTitle();
        }
        public java.lang.String getBusinessPhone()
        {
            if (contact.getPhone() == null)
                return "";
            else
                return contact.getPhone();
        }
        public java.lang.String getMobilePhone()
        {
            if (contact.getMobilePhone() == null)
                return "";
            else
                return contact.getMobilePhone();
        }
        public java.lang.String getEmail()
        {
            if (contact.getEmail() == null)
                return "";
            else
                return contact.getEmail();
        }
        public java.lang.String getMailingStreet()
        {
            if (contact.getMailingStreet() == null)
                return "";
            else
                return contact.getMailingStreet();
        }
        public java.lang.String getMailingCity()
        {
            if (contact.getMailingCity() == null)
                return "";
            else
                return contact.getMailingCity();
        }
        public java.lang.String getMailingState()
        {
            if (contact.getMailingState() == null)
                return "";
            else
                return contact.getMailingState();
        }
        public java.lang.String getMailingCountry()
        {
            if (contact.getMailingCountry() == null)
                return "";
            else
                return contact.getMailingCountry();
        }
        public void setSalutation(String s)
        {
			this.contact.setSalutation(s);
        }
        public void setFirstName(String s)
        {
            this.contact.setFirstName(s);
        }
        public void setLastName(String s)
        {
            this.contact.setLastName(s);
        }
        public void setDepartment(String s)
        {
            this.contact.setDepartment(s);
        }
        public void setTitle(String s)
        {
            this.contact.setTitle(s);
        }
        public void setBusinessPhone(String s)
        {
            this.contact.setPhone(s);
        }
        public void setMobilePhone(String s)
        {
            this.contact.setMobilePhone(s);
        }
        public void setEmail(String s)
        {
            this.contact.setEmail(s);
        }
        public void setMailingStreet(String s)
        {
            this.contact.setMailingStreet(s);
        }
        public void setMailingCity(String s)
        {
            this.contact.setMailingCity(s);
        }
        public void setMailingState(String s)
        {
            this.contact.setMailingState(s);
        }
        public void setMailingCountry(String s)
        {
            this.contact.setMailingCountry(s);
        }

    }


}
