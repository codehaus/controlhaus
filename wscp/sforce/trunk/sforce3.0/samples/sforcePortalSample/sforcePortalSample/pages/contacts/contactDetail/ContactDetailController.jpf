/*   Copyright 2004 Salesforce.com
 *
 *   Licensed under the Apache License, Version 2.0 (the "License");
 *   you may not use this file except in compliance with the License.
 *   You may obtain a copy of the License at
 *
 *       http://www.apache.org/licenses/LICENSE-2.0
 *
 *   Unless required by applicable law or agreed to in writing, software
 *   distributed under the License is distributed on an "AS IS" BASIS,
 *   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *   See the License for the specific language governing permissions and
 *   limitations under the License.
 */

package pages.contacts.contactDetail;
import com.bea.netuix.servlets.controls.page.PageBackingContext;
import com.bea.netuix.servlets.controls.portlet.backing.PortletBackingContext;
import com.bea.netuix.servlets.controls.portlet.events.PortletEvent;
import com.bea.wlw.netui.pageflow.FormData;
import com.bea.wlw.netui.pageflow.Forward;
import com.bea.wlw.netui.pageflow.PageFlowController;
import com.bea.xml.XmlObject;
import com.sforce.soap.enterprise.DeleteResult;
import com.sforce.soap.enterprise.DescribeSObjectResult;
import com.sforce.soap.enterprise.Field;
import com.sforce.soap.enterprise.PicklistEntry;
import com.sforce.soap.enterprise.QueryResult;
import com.sforce.soap.enterprise.SaveResult;
import com.sforce.soap.enterprise.sobject.Account;
import com.sforce.soap.enterprise.sobject.Contact;
import com.sforce.soap.enterprise.sobject.SObject;
import pages.contacts.contactList.ContactListController;
import pages.contacts.contactList.ContactListController.ContactForm;

/**
 * @jpf:controller
 * @jpf:view-properties view-properties::
 * <!-- This data is auto-generated. Hand-editing this section is not recommended. -->
 * <view-properties>
 * <pageflow-object id="pageflow:/pages/contacts/contactDetail/ContactDetailController.jpf"/>
 * <pageflow-object id="action:begin.do">
 *   <property value="80" name="x"/>
 *   <property value="100" name="y"/>
 * </pageflow-object>
 * <pageflow-object id="action:listContacts.do">
 *   <property value="100" name="x"/>
 *   <property value="80" name="y"/>
 * </pageflow-object>
 * <pageflow-object id="action:viewContact.do">
 *   <property value="60" name="x"/>
 *   <property value="40" name="y"/>
 * </pageflow-object>
 * <pageflow-object id="action:createContact.do">
 *   <property value="360" name="x"/>
 *   <property value="80" name="y"/>
 * </pageflow-object>
 * <pageflow-object id="action:deleteContact.do">
 *   <property value="340" name="x"/>
 *   <property value="200" name="y"/>
 * </pageflow-object>
 * <pageflow-object id="action:editContact.do">
 *   <property value="180" name="x"/>
 *   <property value="160" name="y"/>
 * </pageflow-object>
 * <pageflow-object id="action:saveContact.do">
 *   <property value="200" name="x"/>
 *   <property value="180" name="y"/>
 * </pageflow-object>
 * <pageflow-object id="action-call:@page:viewContact.jsp@#@action:deleteContact.do@">
 *   <property value="300,300,302,304" name="elbowsX"/>
 *   <property value="236,192,192,192" name="elbowsY"/>
 *   <property value="North_1" name="fromPort"/>
 *   <property value="West_1" name="toPort"/>
 * </pageflow-object>
 * <pageflow-object id="action-call:@page:viewContact.jsp@#@action:createContact.do@">
 *   <property value="311,311,317,324" name="elbowsX"/>
 *   <property value="236,83,83,83" name="elbowsY"/>
 *   <property value="North_2" name="fromPort"/>
 *   <property value="West_2" name="toPort"/>
 * </pageflow-object>
 * <pageflow-object id="action-call:@page:viewContact.jsp@#@action:editContact.do@">
 *   <property value="264,240,240,216" name="elbowsX"/>
 *   <property value="261,261,152,152" name="elbowsY"/>
 *   <property value="West_0" name="fromPort"/>
 *   <property value="East_1" name="toPort"/>
 * </pageflow-object>
 * <pageflow-object id="page:viewContact.jsp">
 *   <property value="300" name="x"/>
 *   <property value="280" name="y"/>
 * </pageflow-object>
 * <pageflow-object id="action-call:@page:editContact.jsp@#@action:deleteContact.do@">
 *   <property value="306,306,304,304" name="elbowsX"/>
 *   <property value="242,217,217,192" name="elbowsY"/>
 *   <property value="East_1" name="fromPort"/>
 *   <property value="West_1" name="toPort"/>
 * </pageflow-object>
 * <pageflow-object id="action-call:@page:editContact.jsp@#@action:saveContact.do@">
 *   <property value="234,234,236,236" name="elbowsX"/>
 *   <property value="231,144,144,183" name="elbowsY"/>
 *   <property value="West_0" name="fromPort"/>
 *   <property value="East_2" name="toPort"/>
 * </pageflow-object>
 * <pageflow-object id="page:editContact.jsp">
 *   <property value="270" name="x"/>
 *   <property value="250" name="y"/>
 * </pageflow-object>
 * <pageflow-object id="forward:path#success#createContact.do#@action:begin.do@">
 *   <property value="116,220,220,324" name="elbowsX"/>
 *   <property value="92,92,72,72" name="elbowsY"/>
 *   <property value="East_1" name="fromPort"/>
 *   <property value="West_1" name="toPort"/>
 *   <property value="success" name="label"/>
 * </pageflow-object>
 * <pageflow-object id="forward:path#success#createContact.do#@action:listContacts.do@">
 *   <property value="136,230,230,324" name="elbowsX"/>
 *   <property value="72,72,61,61" name="elbowsY"/>
 *   <property value="East_1" name="fromPort"/>
 *   <property value="West_0" name="toPort"/>
 *   <property value="success" name="label"/>
 * </pageflow-object>
 * <pageflow-object id="forward:path#success#viewContact.jsp#@action:viewContact.do@">
 *   <property value="96,140,140,184" name="elbowsX"/>
 *   <property value="32,32,181,181" name="elbowsY"/>
 *   <property value="East_1" name="fromPort"/>
 *   <property value="West_0" name="toPort"/>
 *   <property value="success" name="label"/>
 * </pageflow-object>
 * <pageflow-object id="forward:path#success#editContact.jsp#@action:createContact.do@">
 *   <property value="324,315,315,306" name="elbowsX"/>
 *   <property value="83,83,231,231" name="elbowsY"/>
 *   <property value="West_2" name="fromPort"/>
 *   <property value="East_0" name="toPort"/>
 *   <property value="success" name="label"/>
 * </pageflow-object>
 * <pageflow-object id="forward:path#success#createContact.do#@action:deleteContact.do@">
 *   <property value="304,240,240,176" name="elbowsX"/>
 *   <property value="181,181,112,112" name="elbowsY"/>
 *   <property value="West_0" name="fromPort"/>
 *   <property value="East_1" name="toPort"/>
 *   <property value="success" name="label"/>
 * </pageflow-object>
 * <pageflow-object id="return-to:@forward:return-to#error#currentPage#@action:deleteContact.do@@">
 *   <property value="330" name="x"/>
 *   <property value="310" name="y"/>
 * </pageflow-object>
 * <pageflow-object id="forward:return-to#error#currentPage#@action:deleteContact.do@">
 *   <property value="376,400,400,424" name="elbowsX"/>
 *   <property value="192,192,192,192" name="elbowsY"/>
 *   <property value="East_1" name="fromPort"/>
 *   <property value="West_1" name="toPort"/>
 *   <property value="error" name="label"/>
 * </pageflow-object>
 * <pageflow-object id="forward:path#success#editContact.jsp#@action:editContact.do@">
 *   <property value="180,147,147,204" name="elbowsX"/>
 *   <property value="116,116,201,201" name="elbowsY"/>
 *   <property value="North_1" name="fromPort"/>
 *   <property value="West_0" name="toPort"/>
 *   <property value="success" name="label"/>
 * </pageflow-object>
 * <pageflow-object id="return-to:@forward:return-to#error#currentPage#@action:saveContact.do@@">
 *   <property value="230" name="x"/>
 *   <property value="210" name="y"/>
 * </pageflow-object>
 * <pageflow-object id="forward:return-to#error#currentPage#@action:saveContact.do@">
 *   <property value="236,250,250,265" name="elbowsX"/>
 *   <property value="172,172,296,296" name="elbowsY"/>
 *   <property value="East_1" name="fromPort"/>
 *   <property value="West_1" name="toPort"/>
 *   <property value="error" name="label"/>
 * </pageflow-object>
 * <pageflow-object id="forward:path#success#viewContact.do#@action:saveContact.do@">
 *   <property value="164,130,130,96" name="elbowsX"/>
 *   <property value="172,172,43,43" name="elbowsY"/>
 *   <property value="West_1" name="fromPort"/>
 *   <property value="East_2" name="toPort"/>
 *   <property value="success" name="label"/>
 * </pageflow-object>
 * <pageflow-object id="action-call:@page:editContact.jsp@#@action:viewContact.do@">
 *   <property value="234,165,165,96" name="elbowsX"/>
 *   <property value="242,242,43,43" name="elbowsY"/>
 *   <property value="West_1" name="fromPort"/>
 *   <property value="East_2" name="toPort"/>
 * </pageflow-object>
 * <pageflow-object id="action-call:@page:viewContact.jsp@#@action:viewContact.do@">
 *   <property value="264,180,180,96" name="elbowsX"/>
 *   <property value="272,272,43,43" name="elbowsY"/>
 *   <property value="West_1" name="fromPort"/>
 *   <property value="East_2" name="toPort"/>
 * </pageflow-object>
 * </view-properties>
 * ::
 */
public class ContactDetailController extends PageFlowController
{

    private org.controlhaus.sforce.sforce3_0Enterprise sForce;
    
    public static int VIEW_MODE = 0;
    public static int EDIT_MODE = 1;
    public static int CREATE_MODE = 2;
    
    public int screenMode = VIEW_MODE; 
    
    public String[] salutationOptions;
    
    PortletBackingContext portletBackingContext;
    PortletEvent.Manager portletEventManager; 
    
    // Uncomment this declaration to access Global.app.
    // 
    //     protected global.Global globalApp;
    // 

    // For an example of page flow exception handling see the example "catch" and "exception-handler"
    // annotations in {project}/WEB-INF/src/global/Global.app

    public ContactForm selectedContact;
    
    public boolean isCreateMode()
    {
        return screenMode == this.CREATE_MODE;
    }
    public boolean isEditMode()
    {
        return screenMode == this.EDIT_MODE;
    }
    public boolean isViewMode()
    {
        return screenMode == this.VIEW_MODE;
    }
    
    private String[] getOptions(PicklistEntry[] picklist){
        String[] ret = new String[picklist.length];
        for(int i=0;i<ret.length;i++){
            ret[i] = picklist[i].getValue();
        }
        return ret;
    }
    
    private void setPortletTitle(String title){
        PortletBackingContext pbContext = PortletBackingContext.getPortletBackingContext(this.getRequest());
        System.out.println("a:"+pbContext);
        pbContext.setTitle(title);
    }
    
    
    /**
     * This method represents the point of entry into the pageflow
     * @jpf:action
     * @jpf:forward name="success" path="createContact.do"
     */
    protected Forward begin()
    {
        if(null==sForce){
            sForce = (org.controlhaus.sforce.sforce3_0Enterprise)this.getRequest().getSession().getAttribute("sForce");                        
        }
        
        PortletBackingContext portletBackingContext = PortletBackingContext.getPortletBackingContext(getRequest());        
        portletEventManager = PortletEvent.getEventManager(this, portletBackingContext);

        if(null==salutationOptions){
            DescribeSObjectResult dr = sForce.describeSObject("Contact");
            Field[] fields = dr.getFieldsArray();
            for(int i=0;i<fields.length;i++){
            
                if(fields[i].getName().equals("Salutation")){
                    salutationOptions = getOptions(fields[i].getPicklistValuesArray());                
                }                
            }// for
       
        }                                
        return new Forward("success");
    }
    
    /**
     * Listen to contactList
     * @jpf:action
     * @jpf:forward name="success" path="createContact.do"
     */    
    protected Forward listContacts(){
        return new Forward("success");
    }        
    
    private void loadContact(String id){
        selectedContact = new ContactForm();
        SObject so = sForce.retrieve(ContactListController.CONTACT_FIELDS,"Contact",id);
        selectedContact.setContact( (Contact)so );                
    }
    
    /**
     * @jpf:action
     * @jpf:forward name="success" path="viewContact.jsp"     
     */
    protected Forward viewContact()
    {
        this.setPortletTitle("View Contact Details");
        
        if(null==sForce){
            sForce = (org.controlhaus.sforce.sforce3_0Enterprise)this.getRequest().getSession().getAttribute("sForce");
        }

        try
        {                            
            //check to see if an contactid was passed to the function from a jsp
            if (null != getRequest().getParameter("contactid")) {
                String contactId = this.getRequest().getParameter("contactid");            
                System.out.println("contactid:"+contactId);
                loadContact(contactId);
            }           
            System.out.println("view id:"+selectedContact.getContact().getId());
        }
        catch(Exception ex)
        {
            this.getRequest().setAttribute("msg", ex.getMessage());
            ex.printStackTrace();
            return new Forward("success");
        }

        return new Forward("success");
    }
    
    private void refreshList(){
        System.out.println("send event");
        
        // Create a new portlet event with the results in the paylod
        PortletEvent portletEvent = new PortletEvent(new Integer(0));
        // fire the event.        
        portletEventManager.fireEvent(portletEvent);

    }


    /**
     * @jpf:action
     * @jpf:forward name="success" path="editContact.jsp" 
     */
    protected Forward createContact()
    {
        this.setPortletTitle("Create New Contact");
        screenMode = CREATE_MODE;
        if(null==sForce){
            sForce = (org.controlhaus.sforce.sforce3_0Enterprise)this.getRequest().getSession().getAttribute("sForce");
        }                
        selectedContact = new ContactForm();
        System.out.println("create id:"+selectedContact.getContact().getId());                
        return new Forward("success");
    }

    private Forward returnErrorMessage(com.sforce.soap.enterprise.Error[] errors){
        StringBuffer errorMsg = new StringBuffer();
        for(int i=0;i<errors.length;i++) {
            errorMsg.append( errors[i].getMessage() );                    
        }
        getRequest().setAttribute("errorMsg",errorMsg.toString());
        return new Forward("error");                                
    }
    
    /**
     * @jpf:action
     * @jpf:forward name="success" path="createContact.do"       
     * @jpf:forward return-to="currentPage" name="error"
     */
    protected Forward deleteContact()
    {
        if(null==sForce){
            sForce = (org.controlhaus.sforce.sforce3_0Enterprise)this.getRequest().getSession().getAttribute("sForce");
        }
        DeleteResult dr = sForce.deleteOne(selectedContact.getId());             
        System.out.println("delete id:"+selectedContact.getContact().getId());
        if(!dr.getSuccess()){
            return returnErrorMessage(dr.getErrorsArray());
        }                        
        this.refreshList();
        return new Forward("success");
    }

    /**
     * @jpf:action
     * @jpf:forward name="success" path="editContact.jsp" 
     */
    protected Forward editContact()
    {
        this.setPortletTitle("Edit");
        screenMode = EDIT_MODE;
        if(null==sForce){
            sForce = (org.controlhaus.sforce.sforce3_0Enterprise)this.getRequest().getSession().getAttribute("sForce");
        }        
        System.out.println("edit id:"+selectedContact.getContact().getId());
        return new Forward("success");
    }
    
    /**
     * @jpf:action
     * @jpf:forward return-to="currentPage" name="error"     
     * @jpf:forward name="success" path="viewContact.do"
     */
    protected Forward saveContact()
    {
        if(null==sForce){
            sForce = (org.controlhaus.sforce.sforce3_0Enterprise)this.getRequest().getSession().getAttribute("sForce");
        }        
        System.out.println("save id:"+selectedContact.getContact().getId());
        if(isCreateMode()){
            SaveResult cr = sForce.createOne(selectedContact.getContact());
            if(cr.getSuccess()) {
                loadContact(cr.getId());
                System.out.println("create save id:"+selectedContact.getContact().getId());              
            }else{
                return returnErrorMessage(cr.getErrorsArray());            
            }                        
           
        }else
        if(isEditMode()){
            SaveResult cr = sForce.updateOne(selectedContact.getContact());
            if(cr.getSuccess()) {
                loadContact(cr.getId());
                System.out.println("save save id:"+selectedContact.getContact().getId());              
            }else{
                return returnErrorMessage(cr.getErrorsArray());                                            
            }                        
        }
        this.refreshList();        
        return new Forward("success");
    }
 
}
