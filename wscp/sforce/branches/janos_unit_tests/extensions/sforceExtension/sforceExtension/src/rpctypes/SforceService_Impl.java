/*   Copyright 2004 Salesforce.com
 *
 *   Licensed under the Apache License, Version 2.0 (the "License");
 *   you may not use this file except in compliance with the License.
 *   You may obtain a copy of the License at
 *
 *       http://www.apache.org/licenses/LICENSE-2.0
 *
 *   Unless required by applicable law or agreed to in writing, software
 *   distributed under the License is distributed on an "AS IS" BASIS,
 *   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *   See the License for the specific language governing permissions and
 *   limitations under the License.
 */

package rpctypes;

import com.bea.ide.core.ResourceSvc;
import com.bea.ide.filesystem.FileSvc;
import com.bea.ide.filesystem.FileSvc.IFileSaver;
import java.io.File;
import java.io.InputStream;
import java.net.URI;

/**
 * Generated class, do not edit.
 *
 * This service class was generated by weblogic
 * webservice stub gen on Wed Feb 04 11:45:30 PST 2004 */

public class SforceService_Impl 
     extends weblogic.webservice.core.rpc.ServiceImpl 
     implements rpctypes.SforceService{
     
     static String _sTempFile=null;
     
  public SforceService_Impl() 
       throws java.io.IOException{

    this( "src/rpctypes/SforceService.wsdl" );
  }

  public SforceService_Impl( String wsdlurl ) 
       throws java.io.IOException{
/* changed from
    super( wsdlurl, "sforce.SforceService" );
*/
    super( wsdlurl, getTempFile("src.rpctypes.SforceService"));
  }
   
   private static String getTempFile(String filename) 
    {
        try {
        if (null==_sTempFile)
            {
                String tempFileName="sftemp.xml";
                String resource =  filename.replace( '.', '/' ) + ".xml";
                URI uriTempFile = FileSvc.get().createTempFile(tempFileName);
                InputStream is= ResourceSvc.get().getInputStream(resource);
                IFileSaver fs = FileSvc.get().getFileSaver(uriTempFile, true);
                FileSvc.get().saveDialog(fs, is);
                _sTempFile = (new File(uriTempFile)).getPath();
            }
        return _sTempFile;    
        
        } catch (Exception e) {
            System.out.println("unable to create temp config file");
            e.printStackTrace();
            return filename;
        }
        
    }


    //***********************************
  // Port Name: Soap 
  // Port Type: Soap  //***********************************

  rpctypes.Soap mvar_Soap;


  /**
   * returns a port in this service 
   *
   */

  public Soap getSoap(){

    if( mvar_Soap == null ){
      mvar_Soap = 
        new Soap_Stub( _getPort( "Soap" ) );
    }

    return mvar_Soap;

  }

  public Soap getSoap(String username, String password){

    _setUser( username, password, getSoap() );

    return getSoap();
  }
}