/*   Copyright 2004 Salesforce.com
 *
 *   Licensed under the Apache License, Version 2.0 (the "License");
 *   you may not use this file except in compliance with the License.
 *   You may obtain a copy of the License at
 *
 *       http://www.apache.org/licenses/LICENSE-2.0
 *
 *   Unless required by applicable law or agreed to in writing, software
 *   distributed under the License is distributed on an "AS IS" BASIS,
 *   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *   See the License for the specific language governing permissions and
 *   limitations under the License.
 */

package pages.manageAccount;
import com.bea.wlw.netui.pageflow.FormData;
import com.bea.wlw.netui.pageflow.Forward;
import com.bea.wlw.netui.pageflow.PageFlowController;

/**
 * @jpf:controller
 * @jpf:view-properties view-properties::
 * <!-- This data is auto-generated. Hand-editing this section is not recommended. -->
 * <view-properties>
 * <pageflow-object id="pageflow:/pages/manageAccount/ManageAccountController.jpf"/>
 * <pageflow-object id="action:begin.do">
 *   <property value="400" name="x"/>
 *   <property value="100" name="y"/>
 * </pageflow-object>
 * <pageflow-object id="action:setNewPassword.do#pages.manageAccount.ManageAccountController.SetNewPasswordForm">
 *   <property value="160" name="x"/>
 *   <property value="260" name="y"/>
 * </pageflow-object>
 * <pageflow-object id="action-call:@page:changePassword.jsp@#@action:setNewPassword.do#pages.manageAccount.ManageAccountController.SetNewPasswordForm@">
 *   <property value="364,280,280,196" name="elbowsX"/>
 *   <property value="241,241,241,241" name="elbowsY"/>
 *   <property value="West_0" name="fromPort"/>
 *   <property value="East_0" name="toPort"/>
 * </pageflow-object>
 * <pageflow-object id="page:changePassword.jsp">
 *   <property value="400" name="x"/>
 *   <property value="260" name="y"/>
 * </pageflow-object>
 * <pageflow-object id="forward:path#success#changePassword.jsp#@action:begin.do@">
 *   <property value="400,400,400,400" name="elbowsX"/>
 *   <property value="144,180,180,216" name="elbowsY"/>
 *   <property value="South_1" name="fromPort"/>
 *   <property value="North_1" name="toPort"/>
 *   <property value="success" name="label"/>
 * </pageflow-object>
 * <pageflow-object id="forward:path#success#changePassword.jsp#@action:setNewPassword.do#pages.manageAccount.ManageAccountController.SetNewPasswordForm@">
 *   <property value="196,280,280,364" name="elbowsX"/>
 *   <property value="252,252,252,252" name="elbowsY"/>
 *   <property value="East_1" name="fromPort"/>
 *   <property value="West_1" name="toPort"/>
 *   <property value="success" name="label"/>
 * </pageflow-object>
 * <pageflow-object id="formbeanprop:pages.manageAccount.ManageAccountController.SetNewPasswordForm#userName#java.lang.String"/>
 * <pageflow-object id="formbeanprop:pages.manageAccount.ManageAccountController.SetNewPasswordForm#oldPassword#java.lang.String"/>
 * <pageflow-object id="formbeanprop:pages.manageAccount.ManageAccountController.SetNewPasswordForm#newPassword#java.lang.String"/>
 * <pageflow-object id="formbeanprop:pages.manageAccount.ManageAccountController.SetNewPasswordForm#verifyNewPassword#java.lang.String"/>
 * <pageflow-object id="formbean:pages.manageAccount.ManageAccountController.SetNewPasswordForm"/>
 * </view-properties>
 * ::
 */
public class ManageAccountController extends PageFlowController
{
    private org.controlhaus.sforce.sforce3_0Enterprise sForce;
   
    public String message; 
    public String userName;
    /**
     * This method represents the point of entry into the pageflow
     * @jpf:action
     * @jpf:forward name="success" path="changePassword.jsp"
     */
    protected Forward begin()
    {
        if(sForce==null){
            sForce = (org.controlhaus.sforce.sforce3_0Enterprise)this.getRequest().getSession().getAttribute("sForce");
        }
        userName = sForce.getUserInfo().getUserFullName();
        message = "Change My Password:";
        
        return new Forward("success");
    }

    /**
     * @jpf:action
     * @jpf:forward name="success" path="changePassword.jsp"
     */
    protected Forward setNewPassword(SetNewPasswordForm form)
    {   
        
        //avoid null pointer
        if ( null != form.getNewPassword() && null != form.getVerifyNewPassword()  )
        {
            if ( (form.getNewPassword().equals(form.getVerifyNewPassword())) && ( ! "".equals(form.getNewPassword()) ) ) {
                sForce.setPassword(sForce.getUserInfo().getUserId(), form.getNewPassword());
                form.setOldPassword(null);
                form.setNewPassword(null);
                form.setVerifyNewPassword(null);
            }
            else {
                this.message = "Please review the change password conditions.";
            }
        }
        return new Forward("success");
    }

    /**
     * FormData get and set methods may be overwritten by the Form Bean editor.
     */
    public static class SetNewPasswordForm extends FormData
    {
        private String oldPassword;
        private String userName;
        private String newPassword;
        private String verifyNewPassword;
        
        public void setUserName(String userName)
        {
            this.userName = userName;
        }

        public String getUserName()
        {
            return this.userName;
        }

        public void setOldPassword(String password)
        {
            this.oldPassword = password;
        }

        public String getOldPassword()
        {
            return this.oldPassword;
        }
        
        public void setNewPassword(String password)
        {
            this.newPassword = password;
        }

        public String getNewPassword()
        {
            return this.newPassword;
        }
        
        public void setVerifyNewPassword(String password)
        {
            this.verifyNewPassword = password;
        }

        public String getVerifyNewPassword()
        {
            return this.verifyNewPassword;
        }
        
    }
}
