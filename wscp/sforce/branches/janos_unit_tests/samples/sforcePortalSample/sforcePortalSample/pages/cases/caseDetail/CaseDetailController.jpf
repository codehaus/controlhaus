/*   Copyright 2004 Salesforce.com
 *
 *   Licensed under the Apache License, Version 2.0 (the "License");
 *   you may not use this file except in compliance with the License.
 *   You may obtain a copy of the License at
 *
 *       http://www.apache.org/licenses/LICENSE-2.0
 *
 *   Unless required by applicable law or agreed to in writing, software
 *   distributed under the License is distributed on an "AS IS" BASIS,
 *   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *   See the License for the specific language governing permissions and
 *   limitations under the License.
 */

package pages.cases.caseDetail;
import com.bea.netuix.servlets.controls.page.PageBackingContext;
import com.bea.netuix.servlets.controls.portlet.backing.PortletBackingContext;
import com.bea.netuix.servlets.controls.portlet.events.PortletEvent;
import com.bea.wlw.netui.pageflow.FormData;
import com.bea.wlw.netui.pageflow.Forward;
import com.bea.wlw.netui.pageflow.PageFlowController;
import com.bea.xml.XmlObject;
import com.sforce.soap.enterprise.DeleteResult;
import com.sforce.soap.enterprise.DescribeSObjectResult;
import com.sforce.soap.enterprise.Field;
import com.sforce.soap.enterprise.PicklistEntry;
import com.sforce.soap.enterprise.QueryResult;
import com.sforce.soap.enterprise.SaveResult;
import com.sforce.soap.enterprise.sobject.Case;
import com.sforce.soap.enterprise.sobject.SObject;
import pages.cases.caseList.CaseListController.CaseForm;

/**
 * @jpf:controller
 * @jpf:view-properties view-properties::
 * <!-- This data is auto-generated. Hand-editing this section is not recommended. -->
 * <view-properties>
 * <pageflow-object id="pageflow:/pages/cases/caseDetail/CaseDetailController.jpf"/>
 * <pageflow-object id="action:begin.do">
 *   <property value="60" name="x"/>
 *   <property value="360" name="y"/>
 * </pageflow-object>
 * <pageflow-object id="action:listCases.do">
 *   <property value="60" name="x"/>
 *   <property value="160" name="y"/>
 * </pageflow-object>
 * <pageflow-object id="action:viewCase.do">
 *   <property value="460" name="x"/>
 *   <property value="360" name="y"/>
 * </pageflow-object>
 * <pageflow-object id="action:createCase.do">
 *   <property value="160" name="x"/>
 *   <property value="180" name="y"/>
 * </pageflow-object>
 * <pageflow-object id="action:deleteCase.do">
 *   <property value="360" name="x"/>
 *   <property value="120" name="y"/>
 * </pageflow-object>
 * <pageflow-object id="action:editCase.do">
 *   <property value="160" name="x"/>
 *   <property value="80" name="y"/>
 * </pageflow-object>
 * <pageflow-object id="action:saveCase.do">
 *   <property value="360" name="x"/>
 *   <property value="220" name="y"/>
 * </pageflow-object>
 * <pageflow-object id="action-call:@page:viewCase.jsp@#@action:deleteCase.do@">
 *   <property value="96,210,210,324" name="elbowsX"/>
 *   <property value="252,252,123,123" name="elbowsY"/>
 *   <property value="East_1" name="fromPort"/>
 *   <property value="West_2" name="toPort"/>
 * </pageflow-object>
 * <pageflow-object id="action-call:@page:viewCase.jsp@#@action:editCase.do@">
 *   <property value="96,110,110,124" name="elbowsX"/>
 *   <property value="241,241,72,72" name="elbowsY"/>
 *   <property value="East_0" name="fromPort"/>
 *   <property value="West_1" name="toPort"/>
 * </pageflow-object>
 * <pageflow-object id="action-call:@page:viewCase.jsp@#@action:createCase.do@">
 *   <property value="96,110,110,124" name="elbowsX"/>
 *   <property value="252,252,183,183" name="elbowsY"/>
 *   <property value="East_1" name="fromPort"/>
 *   <property value="West_2" name="toPort"/>
 * </pageflow-object>
 * <pageflow-object id="action-call:@page:viewCase.jsp@#@action:viewCase.do@">
 *   <property value="96,260,260,424" name="elbowsX"/>
 *   <property value="263,263,341,341" name="elbowsY"/>
 *   <property value="East_2" name="fromPort"/>
 *   <property value="West_0" name="toPort"/>
 * </pageflow-object>
 * <pageflow-object id="page:viewCase.jsp">
 *   <property value="60" name="x"/>
 *   <property value="260" name="y"/>
 * </pageflow-object>
 * <pageflow-object id="action-call:@page:editCase.jsp@#@action:deleteCase.do@">
 *   <property value="296,310,310,324" name="elbowsX"/>
 *   <property value="112,112,112,112" name="elbowsY"/>
 *   <property value="East_1" name="fromPort"/>
 *   <property value="West_1" name="toPort"/>
 * </pageflow-object>
 * <pageflow-object id="action-call:@page:editCase.jsp@#@action:viewCase.do@">
 *   <property value="296,360,360,424" name="elbowsX"/>
 *   <property value="123,123,352,352" name="elbowsY"/>
 *   <property value="East_2" name="fromPort"/>
 *   <property value="West_1" name="toPort"/>
 * </pageflow-object>
 * <pageflow-object id="action-call:@page:editCase.jsp@#@action:saveCase.do@">
 *   <property value="296,310,310,324" name="elbowsX"/>
 *   <property value="101,101,212,212" name="elbowsY"/>
 *   <property value="East_0" name="fromPort"/>
 *   <property value="West_1" name="toPort"/>
 * </pageflow-object>
 * <pageflow-object id="page:editCase.jsp">
 *   <property value="260" name="x"/>
 *   <property value="120" name="y"/>
 * </pageflow-object>
 * <pageflow-object id="forward:path#success#createCase.do#@action:begin.do@">
 *   <property value="96,110,110,124" name="elbowsX"/>
 *   <property value="352,352,172,172" name="elbowsY"/>
 *   <property value="East_1" name="fromPort"/>
 *   <property value="West_1" name="toPort"/>
 *   <property value="success" name="label"/>
 * </pageflow-object>
 * <pageflow-object id="forward:path#success#createCase.do#@action:listCases.do@">
 *   <property value="96,110,110,124" name="elbowsX"/>
 *   <property value="152,152,161,161" name="elbowsY"/>
 *   <property value="East_1" name="fromPort"/>
 *   <property value="West_0" name="toPort"/>
 *   <property value="success" name="label"/>
 * </pageflow-object>
 * <pageflow-object id="forward:path#success#viewCase.jsp#@action:viewCase.do@">
 *   <property value="424,260,260,96" name="elbowsX"/>
 *   <property value="341,341,252,252" name="elbowsY"/>
 *   <property value="West_0" name="fromPort"/>
 *   <property value="East_1" name="toPort"/>
 *   <property value="success" name="label"/>
 * </pageflow-object>
 * <pageflow-object id="forward:path#success#editCase.jsp#@action:createCase.do@">
 *   <property value="196,210,210,224" name="elbowsX"/>
 *   <property value="161,161,112,112" name="elbowsY"/>
 *   <property value="East_0" name="fromPort"/>
 *   <property value="West_1" name="toPort"/>
 *   <property value="success" name="label"/>
 * </pageflow-object>
 * <pageflow-object id="forward:path#success#createCase.do#@action:deleteCase.do@">
 *   <property value="324,260,260,196" name="elbowsX"/>
 *   <property value="112,112,172,172" name="elbowsY"/>
 *   <property value="West_1" name="fromPort"/>
 *   <property value="East_1" name="toPort"/>
 *   <property value="success" name="label"/>
 * </pageflow-object>
 * <pageflow-object id="return-to:@forward:return-to#error#currentPage#@action:deleteCase.do@@">
 *   <property value="460" name="x"/>
 *   <property value="120" name="y"/>
 * </pageflow-object>
 * <pageflow-object id="forward:return-to#error#currentPage#@action:deleteCase.do@">
 *   <property value="396,410,410,424" name="elbowsX"/>
 *   <property value="112,112,112,112" name="elbowsY"/>
 *   <property value="East_1" name="fromPort"/>
 *   <property value="West_1" name="toPort"/>
 *   <property value="error" name="label"/>
 * </pageflow-object>
 * <pageflow-object id="forward:path#success#editCase.jsp#@action:editCase.do@">
 *   <property value="196,210,210,224" name="elbowsX"/>
 *   <property value="72,72,112,112" name="elbowsY"/>
 *   <property value="East_1" name="fromPort"/>
 *   <property value="West_1" name="toPort"/>
 *   <property value="success" name="label"/>
 * </pageflow-object>
 * <pageflow-object id="return-to:@forward:return-to#error#currentPage#@action:saveCase.do@@">
 *   <property value="460" name="x"/>
 *   <property value="260" name="y"/>
 * </pageflow-object>
 * <pageflow-object id="forward:return-to#error#currentPage#@action:saveCase.do@">
 *   <property value="396,410,410,424" name="elbowsX"/>
 *   <property value="223,223,252,252" name="elbowsY"/>
 *   <property value="East_2" name="fromPort"/>
 *   <property value="West_1" name="toPort"/>
 *   <property value="error" name="label"/>
 * </pageflow-object>
 * <pageflow-object id="forward:path#success#viewCase.do#@action:saveCase.do@">
 *   <property value="396,410,410,424" name="elbowsX"/>
 *   <property value="212,212,352,352" name="elbowsY"/>
 *   <property value="East_1" name="fromPort"/>
 *   <property value="West_1" name="toPort"/>
 *   <property value="success" name="label"/>
 * </pageflow-object>
 * </view-properties>
 * ::
 */
public class CaseDetailController extends PageFlowController
{

    private org.controlhaus.sforce.sforce3_0Enterprise sForce;
    
    public static int VIEW_MODE = 0;
    public static int EDIT_MODE = 1;
    public static int CREATE_MODE = 2;
    
    public int screenMode = VIEW_MODE; 
    
    public String[] typeOptions;
    public String[] statusOptions;
    public String[] priorityOptions;
    
    PortletBackingContext portletBackingContext;
    PortletEvent.Manager portletEventManager; 
    
    // Uncomment this declaration to access Global.app.
    // 
    //     protected global.Global globalApp;
    // 

    // For an example of page flow exception handling see the example "catch" and "exception-handler"
    // annotations in {project}/WEB-INF/src/global/Global.app

    public CaseForm selectedCase;
    
    public boolean isCreateMode()
    {
        return screenMode == this.CREATE_MODE;
    }
    public boolean isEditMode()
    {
        return screenMode == this.EDIT_MODE;
    }
    public boolean isViewMode()
    {
        return screenMode == this.VIEW_MODE;
    }
    
    private String[] getOptions(PicklistEntry[] picklist){
        String[] ret = new String[picklist.length];
        for(int i=0;i<ret.length;i++){
            ret[i] = picklist[i].getValue();
        }
        return ret;
    }
    
    private void setPortletTitle(String title){
        PortletBackingContext pbContext = PortletBackingContext.getPortletBackingContext(this.getRequest());
        System.out.println("a:"+pbContext);
        pbContext.setTitle(title);
    }
    
    
    /**
     * This method represents the point of entry into the pageflow
     * @jpf:action
     * @jpf:forward name="success" path="createCase.do"
     */
    protected Forward begin()
    {
        if(null==sForce){
            sForce = (org.controlhaus.sforce.sforce3_0Enterprise)this.getRequest().getSession().getAttribute("sForce");                        
        }
        
        PortletBackingContext portletBackingContext = PortletBackingContext.getPortletBackingContext(getRequest());        
        portletEventManager = PortletEvent.getEventManager(this, portletBackingContext);

        if(null==statusOptions){
            DescribeSObjectResult dr = sForce.describeSObject("Case");
            Field[] fields = dr.getFieldsArray();
            for(int i=0;i<fields.length;i++){
            
                if(fields[i].getName().equals("Status")){
                    statusOptions = getOptions(fields[i].getPicklistValuesArray());                
                }else
                if(fields[i].getName().equals("Priority")){
                    priorityOptions = getOptions(fields[i].getPicklistValuesArray());                
                }else
                if(fields[i].getName().equals("Type")){
                    typeOptions = getOptions(fields[i].getPicklistValuesArray());                
                }
                
            }// for
       
        }                                
        return new Forward("success");
    }
    
    /**
     * Listen to caseList
     * @jpf:action
     * @jpf:forward name="success" path="createCase.do"
     */    
    protected Forward listCases(){
        return new Forward("success");
    }        
    
    private void loadCase(String id){
        selectedCase = new CaseForm();
        SObject so = sForce.retrieve("Id, SuppliedCompany, Priority, Status, OwnerId, Type, Subject", "Case",id);
        selectedCase.setCase( (Case)so );                
    }

    /**
     * @jpf:action
     * @jpf:forward name="success" path="viewCase.jsp"     
     */
    protected Forward viewCase()
    {
        this.setPortletTitle("View Case Details");
        
        if(null==sForce){
            sForce = (org.controlhaus.sforce.sforce3_0Enterprise)this.getRequest().getSession().getAttribute("sForce");
        }

        try
        {                            
            //check to see if an caseid was passed to the function from a jsp
            if (null != getRequest().getParameter("caseid")) {
                String caseId = this.getRequest().getParameter("caseid");            
                loadCase(caseId);
            }           
            System.out.println("view id:"+selectedCase.getCase().getId());
        }
        catch(Exception ex)
        {
            this.getRequest().setAttribute("msg", ex.getMessage());
            ex.printStackTrace();
            return new Forward("success");
        }

        return new Forward("success");
    }
    
    private void refreshList(){
        System.out.println("send event");
        
        // Create a new portlet event with the results in the paylod
        PortletEvent portletEvent = new PortletEvent(new Integer(0));
        // fire the event.        
        portletEventManager.fireEvent(portletEvent);

    }


    /**
     * @jpf:action
     * @jpf:forward name="success" path="editCase.jsp" 
     */
    protected Forward createCase()
    {
        this.setPortletTitle("Create New Case");
        screenMode = CREATE_MODE;
        if(null==sForce){
            sForce = (org.controlhaus.sforce.sforce3_0Enterprise)this.getRequest().getSession().getAttribute("sForce");
        }                
        selectedCase = new CaseForm();
        System.out.println("create id:"+selectedCase.getCase().getId());                
        return new Forward("success");
    }

    private Forward returnErrorMessage(com.sforce.soap.enterprise.Error[] errors){
        StringBuffer errorMsg = new StringBuffer();
        for(int i=0;i<errors.length;i++) {
            errorMsg.append( errors[i].getMessage() );                    
        }
        getRequest().setAttribute("errorMsg",errorMsg.toString());
        return new Forward("error");                                
    }
    
    /**
     * @jpf:action
     * @jpf:forward name="success" path="createCase.do"       
     * @jpf:forward return-to="currentPage" name="error"
     */
    protected Forward deleteCase()
    {
        if(null==sForce){
            sForce = (org.controlhaus.sforce.sforce3_0Enterprise)this.getRequest().getSession().getAttribute("sForce");
        }
        DeleteResult dr = sForce.deleteOne(selectedCase.getId());             
        System.out.println("delete id:"+selectedCase.getCase().getId());
        if(!dr.getSuccess()){
            return returnErrorMessage(dr.getErrorsArray());
        }                        
        this.refreshList();
        return new Forward("success");
    }

    /**
     * @jpf:action
     * @jpf:forward name="success" path="editCase.jsp" 
     */
    protected Forward editCase()
    {
        this.setPortletTitle("Edit");
        screenMode = EDIT_MODE;
        if(null==sForce){
            sForce = (org.controlhaus.sforce.sforce3_0Enterprise)this.getRequest().getSession().getAttribute("sForce");
        }        
        System.out.println("edit id:"+selectedCase.getCase().getId());
        return new Forward("success");
    }
    
    /**
     * @jpf:action
     * @jpf:forward return-to="currentPage" name="error"     
     * @jpf:forward name="success" path="viewCase.do"
     */
    protected Forward saveCase()
    {
        if(null==sForce){
            sForce = (org.controlhaus.sforce.sforce3_0Enterprise)this.getRequest().getSession().getAttribute("sForce");
        }        
        System.out.println("save id:"+selectedCase.getCase().getId());
        if(isCreateMode()){
            SaveResult cr = sForce.createOne(selectedCase.getCase());
            if(cr.getSuccess()) {
                loadCase(cr.getId());
                System.out.println("create save id:"+selectedCase.getCase().getId());              
            }else{
                return returnErrorMessage(cr.getErrorsArray());            
            }                        
           
        }else
        if(isEditMode()){
            SaveResult cr = sForce.updateOne(selectedCase.getCase());
            if(cr.getSuccess()) {
                loadCase(cr.getId());
                System.out.println("save save id:"+selectedCase.getCase().getId());              
            }else{
                return returnErrorMessage(cr.getErrorsArray());                                            
            }                        
        }
        this.refreshList();        
        return new Forward("success");
    }
 
}
