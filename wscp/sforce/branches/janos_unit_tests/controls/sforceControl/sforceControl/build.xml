<?xml version="1.0" encoding="UTF-8" ?>
<project name="Control project build" default="build">
  <property environment="env" />
  
  <!-- These properties are auto-set to match local values when executed within the IDE. -->
  <property name="debug.info" value="true" />
  <property name="beahome.local.directory" value="c:/bea" />
  <property name="platformhome.local.directory" value="c:/bea/weblogic81" />
  <property name="app.local.directory" value="c:/cygwin/home/gconaty/svn.controlhaus.org/sforce/trunk/sforce/controls/sforceControl/" />
  <property name="project.local.directory" value="c:/cygwin/home/gconaty/svn.controlhaus.org/sforce/trunk/sforce/controls/sforceControl/sforceControl/" />
  <!--end auto properties -->
  
  <property name="dest.path" value="${java.io.tmpdir}/wlw-temp-15468/wlw_compile57596" />
  <property name="src.path" value="${project.local.directory}" />
  <property name="output.filename" value="sforceControl.jar" />
  <property name="output.directory" value="${app.local.directory}/APP-INF/lib" />
  <property name="deliverable.output.directory" value="${platformhome.local.directory}/../ext_components/sforceControl.zip" />
  <property name="deliverable.docs.directory" value="docs" />
  
  <path id="task.classpath">
    <fileset dir="${platformhome.local.directory}">
      <include name="javelin/lib/javelin.jar"/>
      <include name="common/lib/log4j.jar" />
      <include name="server/lib/knex.jar" />
      <include name="server/lib/xbean.jar" />
      <include name="server/lib/wlxbean.jar" />
      <include name="server/lib/xqrl.jar" />
      <include name="server/lib/weblogic.jar"/>
      <include name="workshop/wlw-ide.jar"/>
    </fileset>
  </path>
  
  <taskdef name="javelin" classname="com.bea.compiler.ant.Javelin" classpathref="task.classpath"/>
  <taskdef name="jcgen" classname="com.bea.wlw.runtime.core.ear.JcGen" classpathref="task.classpath"/>

  <target name="build" description="Build this project and copy it to Libraries">
    <delete dir="${dest.path}" failonerror="false" />
    
    <mkdir dir="${dest.path}" />
    <mkdir dir="${output.directory}" />
    
    <!-- if ide.class.path is set, then class.path is set to it. -->
    <condition property="class.path" value="${ide.class.path}">
      <isset property="ide.class.path"/> 
    </condition>
    <!-- this property call is ignored if the condition above is met -->
    <property name="class.path" value="${beahome.local.directory}/jdk141_05/jre/lib/rt.jar;${beahome.local.directory}/jdk141_05/lib/tools.jar;${platformhome.local.directory}/workshop/wlw-ide.jar;${platformhome.local.directory}/server/lib/knex.jar;${platformhome.local.directory}/common/lib/log4j.jar;${platformhome.local.directory}/server/lib/debugging.jar;${platformhome.local.directory}/javelin/lib/javelin.jar;${platformhome.local.directory}/server/lib/wlw-lang.jar;${platformhome.local.directory}/server/lib/weblogic.jar;${platformhome.local.directory}/common/eval/pointbase/lib/pbserver44.jar;${platformhome.local.directory}/common/eval/pointbase/lib/pbclient44.jar;${platformhome.local.directory}/server/lib/webservices.jar;${platformhome.local.directory}/server/lib/webserviceclient.jar;${platformhome.local.directory}/server/lib/webserviceclient+ssl.jar;${platformhome.local.directory}/server/lib/wli.jar;${platformhome.local.directory}/server/lib/xbean.jar;${platformhome.local.directory}/server/lib/wlxbean.jar;${platformhome.local.directory}/server/lib/xqrl.jar;${platformhome.local.directory}/server/lib/netui/netui-compiler.jar"/>
    
    <javelin
      classpath="${class.path}"
      sourcepath="${src.path}"
      destdir="${dest.path}"
      failonerror="true"
      argnames="true"
      debug="${debug.info}">
      <fileset dir="${project.local.directory}" excludes="${deliverable.docs.directory}/**"/>
    </javelin>

    <!-- uncomment this if you want to use an existing jc-jar.xml rather than
         always regenerating it.
    <available property="jcjar.exists" file="${project.local.directory}/META-INF/jc-jar.xml"/>
    -->
    <antcall target="make-jc-jar"/>
      
    <!-- jar it up -->
    <jar update="false" destfile="${output.directory}/${output.filename}" basedir="${dest.path}" index="true">
      <fileset dir="${src.path}" casesensitive="false">
        <exclude name="WEB-INF/**" />
        <exclude name="**/*.java" />
        <exclude name="**/*.jcs" />
        <exclude name="**/*.jcx" />
        <exclude name="**/*.ctrl" />
        <exclude name="**/*.jws" />
        <exclude name="**/*.jpd" />
        <exclude name="**/*.pgr" />
        <exclude name="**/*.jsp" />
        <exclude name="**/CVS/**" />
        <exclude name="${deliverable.docs.directory}/**" />
        <exclude name="ctrl/**" />
      </fileset>
    </jar>
    
  </target>
  
  <target name="make-jc-jar" unless="jcjar.exists">
    <mkdir dir="${dest.path}/META-INF"/>
    <jcgen dir="${dest.path}/META-INF" file="jc-jar.xml" >
        <controlset dir="${dest.path}" />
        <classpath>
            <pathelement path="${class.path}"/>
        </classpath>
    </jcgen>
   
  </target> 

  <target name="clean">
    <!-- delete from library dir the set of files in jar dir -->
    <delete file="${output.directory}/${output.filename}" failonerror="false"/>
  </target>
  
  <target name="make-deliverable" depends="build"> 
    <zip update="false" destfile="${deliverable.output.directory}" > 
      <zipfileset dir="${app.local.directory}/APP-INF/lib" includes="SForceWLWControl.jar,Schemas.jar" prefix="controls" /> 
      <zipfileset dir="${project.local.directory}/${deliverable.docs.directory}" 
            includes="**"
			excludes="" 
	/> 
    </zip> 
  </target> 
 

</project>
