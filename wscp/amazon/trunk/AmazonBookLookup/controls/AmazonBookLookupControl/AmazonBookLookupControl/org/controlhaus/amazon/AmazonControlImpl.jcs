/*   Copyright 2004 BEA Systems, Inc.
 *
 *   Licensed under the Apache License, Version 2.0 (the "License");
 *   you may not use this file except in compliance with the License.
 *   You may obtain a copy of the License at
 *
 *       http://www.apache.org/licenses/LICENSE-2.0
 *
 *   Unless required by applicable law or agreed to in writing, software
 *   distributed under the License is distributed on an "AS IS" BASIS,
 *   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *   See the License for the specific language governing permissions and
 *   limitations under the License.
 */


package org.controlhaus.amazon; 

import com.amazon.xml.types.ProductInfoDocument;
import com.amazon.xml.types.ProductInfoDocument.ProductInfo;
import com.bea.control.*;
import com.bea.xml.XmlException;
import java.io.BufferedInputStream;
import java.io.ByteArrayOutputStream;
import java.io.IOException;
import java.io.InputStream;
import java.net.URL;
import java.net.URLConnection;
/**
 * @editor-info:code-gen control-interface="true"
 * @jcs:control-tags file="AmazonControlProperties.xml"
 * @jcs:jc-jar icon-32="icon32.gif" icon-16="icon16.gif" version="1.0" description="Lookup book information by ISBN on Amazon.com" label="Amazon Book Lookup"
 */
public class AmazonControlImpl implements AmazonControl, ControlSource
{ 
    static final long serialVersionUID = 1L;
    
    /**
     * @common:context
     */
    ControlContext context;

    /**
     * @common:operation
     */
    public ProductInfo lookupBook(String isbn)
    {
        final String associatesId = context.getControlAttribute("jc:amazonProperties", "associatesId");
        final String developerId = context.getControlAttribute("jc:amazonProperties", "developerId");
        final String urlString = "http://xml.amazon.com/onca/xml3?t=" + associatesId + "&dev-t=" + developerId + "&AsinSearch=" + isbn + "&type=lite&f=xml";
        String response = null;
        BufferedInputStream in2 = null;
        ProductInfo result = null;
        try {
            URL url = new URL(urlString);
            URLConnection connection = url.openConnection();
            connection.setDoInput(true);
            in2 = new BufferedInputStream(connection.getInputStream());
            ByteArrayOutputStream bytes = new ByteArrayOutputStream();
            byte[] buffer = new byte[1000];
            int amount=0;
            while(amount != -1)
            {
                bytes.write(buffer, 0, amount);
                amount = in2.read(buffer);
            }
            response = bytes.toString("UTF-8");
            response = response.replaceAll("<ProductInfo ", "<ProductInfo xmlns=\"http://www.amazon.com/xml/types\" ");
            ProductInfoDocument doc = ProductInfoDocument.Factory.parse(response);
            result = doc.getProductInfo();
        } catch ( IOException ex ) {
            throw new ControlException("IOException while trying to obtain Amazon Book information using URL [" + urlString + "]");
        } catch ( XmlException ex ) {
            throw new ControlException("Problem parsing XML response from Amazon [" + response + "]");
        } finally {
            if ( in2 != null ) {
                try {
                    in2.close();
                } catch ( IOException ex ) {
                    //ignored
                }
            }
        }
        return result;
        
    }
} 
